{
    "abi":[
        {
          "name": "PricerImpl",
          "type": "impl",
          "interface_name": "common::interfaces::pricer::IPricer"
        },
        {
          "name": "core::integer::u256",
          "type": "struct",
          "members": [
            {
              "name": "low",
              "type": "core::integer::u128"
            },
            {
              "name": "high",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "name": "core::bool",
          "type": "enum",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
            "name": "get_asset_usd_price",
            "type": "function",
            "inputs": [
              {
                "name": "asset_address",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [
              {
                "type": "(core::felt252, core::felt252)"
              }
            ],
            "state_mutability": "view"
          },
        {
          "name": "common::interfaces::pricer::IPricer",
          "type": "interface",
          "items": [
            {
              "name": "get_asset_usd_value",
              "type": "function",
              "inputs": [
                {
                  "name": "asset_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "(core::integer::u256, core::felt252)"
                }
              ],
              "state_mutability": "view"
            },
            {
              "name": "get_asset_usd_price",
              "type": "function",
              "inputs": [
                {
                  "name": "asset_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "(core::felt252, core::felt252)"
                }
              ],
              "state_mutability": "view"
            },
            {
              "name": "get_asset_base_price",
              "type": "function",
              "inputs": [
                {
                  "name": "asset_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "(core::felt252, core::felt252)"
                }
              ],
              "state_mutability": "view"
            },
            {
              "name": "enable_twap",
              "type": "function",
              "inputs": [],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "name": "disable_twap",
              "type": "function",
              "inputs": [],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "name": "is_twap_enabled",
              "type": "function",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "name": "set_pragma_pair_id",
              "type": "function",
              "inputs": [
                {
                  "name": "asset",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "pair_id",
                  "type": "core::felt252"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "name": "get_asset_base_value",
              "type": "function",
              "inputs": [
                {
                  "name": "asset_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "(core::integer::u256, core::felt252)"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "name": "SecurityImpl",
          "type": "impl",
          "interface_name": "common::components::security::ISecurity"
        },
        {
          "name": "common::components::security::ISecurity",
          "type": "interface",
          "items": [
            {
              "name": "upgrade",
              "type": "function",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "name": "pause",
              "type": "function",
              "inputs": [],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "name": "unpause",
              "type": "function",
              "inputs": [],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "name": "is_paused",
              "type": "function",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "name": "set_access_control",
              "type": "function",
              "inputs": [
                {
                  "name": "access_control",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "name": "constructor",
          "type": "constructor",
          "inputs": [
            {
              "name": "access_control",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "oracle_address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "base_asset",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "kind": "struct",
          "name": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Upgraded",
          "type": "event",
          "members": [
            {
              "kind": "data",
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash"
            }
          ]
        },
        {
          "kind": "enum",
          "name": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Event",
          "type": "event",
          "variants": [
            {
              "kind": "nested",
              "name": "Upgraded",
              "type": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Upgraded"
            }
          ]
        },
        {
          "kind": "struct",
          "name": "openzeppelin::security::pausable::PausableComponent::Paused",
          "type": "event",
          "members": [
            {
              "kind": "data",
              "name": "account",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "kind": "struct",
          "name": "openzeppelin::security::pausable::PausableComponent::Unpaused",
          "type": "event",
          "members": [
            {
              "kind": "data",
              "name": "account",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "kind": "enum",
          "name": "openzeppelin::security::pausable::PausableComponent::Event",
          "type": "event",
          "variants": [
            {
              "kind": "nested",
              "name": "Paused",
              "type": "openzeppelin::security::pausable::PausableComponent::Paused"
            },
            {
              "kind": "nested",
              "name": "Unpaused",
              "type": "openzeppelin::security::pausable::PausableComponent::Unpaused"
            }
          ]
        },
        {
          "kind": "enum",
          "name": "openzeppelin::security::reentrancyguard::ReentrancyGuardComponent::Event",
          "type": "event",
          "variants": []
        },
        {
          "kind": "enum",
          "name": "common::components::security::SecurityComponent::Event",
          "type": "event",
          "variants": []
        },
        {
          "kind": "enum",
          "name": "v1_core::contracts::pricer::Pricer::Event",
          "type": "event",
          "variants": [
            {
              "kind": "flat",
              "name": "UpgradeableEvent",
              "type": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Event"
            },
            {
              "kind": "flat",
              "name": "PausableEvent",
              "type": "openzeppelin::security::pausable::PausableComponent::Event"
            },
            {
              "kind": "flat",
              "name": "ReentrancyGuardEvent",
              "type": "openzeppelin::security::reentrancyguard::ReentrancyGuardComponent::Event"
            },
            {
              "kind": "flat",
              "name": "SecurityEvent",
              "type": "common::components::security::SecurityComponent::Event"
            }
          ]
        }
      ]

}
