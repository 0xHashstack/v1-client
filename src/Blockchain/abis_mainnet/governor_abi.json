[
	{
		"name": "GovernorImpl",
		"type": "impl",
		"interface_name": "common::interfaces::governor::IGovernor"
	},
	{
		"name": "core::bool",
		"type": "enum",
		"variants": [
			{
				"name": "False",
				"type": "()"
			},
			{
				"name": "True",
				"type": "()"
			}
		]
	},
	{
		"name": "core::integer::u256",
		"type": "struct",
		"members": [
			{
				"name": "low",
				"type": "core::integer::u128"
			},
			{
				"name": "high",
				"type": "core::integer::u128"
			}
		]
	},
	{
		"name": "common::structs::governor::GovernorStruct::DepositVaultMetadata",
		"type": "struct",
		"members": [
			{
				"name": "asset",
				"type": "core::starknet::contract_address::ContractAddress"
			},
			{
				"name": "supported",
				"type": "core::bool"
			},
			{
				"name": "paused",
				"type": "core::bool"
			},
			{
				"name": "staking_paused",
				"type": "core::bool"
			},
			{
				"name": "min_deposit_amount",
				"type": "core::integer::u256"
			},
			{
				"name": "max_deposit_amount",
				"type": "core::integer::u256"
			}
		]
	},
	{
		"name": "common::structs::governor::GovernorStruct::BorrowVaultMetadata",
		"type": "struct",
		"members": [
			{
				"name": "asset",
				"type": "core::starknet::contract_address::ContractAddress"
			},
			{
				"name": "supported",
				"type": "core::bool"
			},
			{
				"name": "paused",
				"type": "core::bool"
			},
			{
				"name": "min_borrow_amount",
				"type": "core::integer::u256"
			},
			{
				"name": "max_borrow_amount",
				"type": "core::integer::u256"
			}
		]
	},
	{
		"name": "common::structs::governor::GovernorStruct::AssetMetadata",
		"type": "struct",
		"members": [
			{
				"name": "rToken",
				"type": "core::starknet::contract_address::ContractAddress"
			},
			{
				"name": "dToken",
				"type": "core::starknet::contract_address::ContractAddress"
			},
			{
				"name": "empiric_key",
				"type": "core::felt252"
			}
		]
	},
	{
		"name": "common::structs::governor::GovernorStruct::SecondaryMarket",
		"type": "struct",
		"members": [
			{
				"name": "supported",
				"type": "core::bool"
			},
			{
				"name": "active",
				"type": "core::bool"
			}
		]
	},
	{
		"name": "common::interfaces::governor::IGovernor",
		"type": "interface",
		"items": [
			{
				"name": "set_deposit_vault",
				"type": "function",
				"inputs": [
					{
						"name": "rToken",
						"type": "core::starknet::contract_address::ContractAddress"
					},
					{
						"name": "asset",
						"type": "core::starknet::contract_address::ContractAddress"
					},
					{
						"name": "supported",
						"type": "core::bool"
					},
					{
						"name": "paused",
						"type": "core::bool"
					},
					{
						"name": "staking_paused",
						"type": "core::bool"
					},
					{
						"name": "min_deposit_amount",
						"type": "core::integer::u256"
					},
					{
						"name": "max_deposit_amount",
						"type": "core::integer::u256"
					}
				],
				"outputs": [],
				"state_mutability": "external"
			},
			{
				"name": "set_borrow_vault",
				"type": "function",
				"inputs": [
					{
						"name": "dToken",
						"type": "core::starknet::contract_address::ContractAddress"
					},
					{
						"name": "asset",
						"type": "core::starknet::contract_address::ContractAddress"
					},
					{
						"name": "paused",
						"type": "core::bool"
					},
					{
						"name": "supported",
						"type": "core::bool"
					},
					{
						"name": "min_borrow",
						"type": "core::integer::u256"
					},
					{
						"name": "max_borrow",
						"type": "core::integer::u256"
					}
				],
				"outputs": [],
				"state_mutability": "external"
			},
			{
				"name": "set_asset_metadata",
				"type": "function",
				"inputs": [
					{
						"name": "asset",
						"type": "core::starknet::contract_address::ContractAddress"
					},
					{
						"name": "rToken",
						"type": "core::starknet::contract_address::ContractAddress"
					},
					{
						"name": "dToken",
						"type": "core::starknet::contract_address::ContractAddress"
					},
					{
						"name": "empiric_key",
						"type": "core::felt252"
					}
				],
				"outputs": [],
				"state_mutability": "external"
			},
			{
				"name": "set_secondary_market_support",
				"type": "function",
				"inputs": [
					{
						"name": "address",
						"type": "core::starknet::contract_address::ContractAddress"
					},
					{
						"name": "integration",
						"type": "core::felt252"
					},
					{
						"name": "is_supported",
						"type": "core::bool"
					},
					{
						"name": "is_active",
						"type": "core::bool"
					}
				],
				"outputs": [],
				"state_mutability": "external"
			},
			{
				"name": "set_integration_selector_mapping",
				"type": "function",
				"inputs": [
					{
						"name": "integration",
						"type": "core::felt252"
					},
					{
						"name": "method",
						"type": "core::felt252"
					},
					{
						"name": "selector",
						"type": "core::felt252"
					}
				],
				"outputs": [],
				"state_mutability": "external"
			},
			{
				"name": "set_staking_contract",
				"type": "function",
				"inputs": [
					{
						"name": "staking_contract_",
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"outputs": [],
				"state_mutability": "external"
			},
			{
				"name": "set_collector_contract",
				"type": "function",
				"inputs": [
					{
						"name": "collector_contract_",
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"outputs": [],
				"state_mutability": "external"
			},
			{
				"name": "set_category_and_function_type_allowed",
				"type": "function",
				"inputs": [
					{
						"name": "integration",
						"type": "core::felt252"
					},
					{
						"name": "selector",
						"type": "core::felt252"
					},
					{
						"name": "is_allowed",
						"type": "core::bool"
					}
				],
				"outputs": [],
				"state_mutability": "external"
			},
			{
				"name": "set_integration_contract_address",
				"type": "function",
				"inputs": [
					{
						"name": "address",
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"outputs": [],
				"state_mutability": "external"
			},
			{
				"name": "set_liquidation_base_market",
				"type": "function",
				"inputs": [
					{
						"name": "asset",
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"outputs": [],
				"state_mutability": "external"
			},
			{
				"name": "is_dVault_paused",
				"type": "function",
				"inputs": [
					{
						"name": "asset",
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"outputs": [
					{
						"type": "core::bool"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "is_stake_paused",
				"type": "function",
				"inputs": [
					{
						"name": "asset",
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"outputs": [
					{
						"type": "core::bool"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "get_deposit_vault_by_index",
				"type": "function",
				"inputs": [
					{
						"name": "index",
						"type": "core::felt252"
					}
				],
				"outputs": [
					{
						"type": "(core::starknet::contract_address::ContractAddress, common::structs::governor::GovernorStruct::DepositVaultMetadata)"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "get_deposit_vault",
				"type": "function",
				"inputs": [
					{
						"name": "rToken",
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"outputs": [
					{
						"type": "common::structs::governor::GovernorStruct::DepositVaultMetadata"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "get_minimum_deposit_amount",
				"type": "function",
				"inputs": [
					{
						"name": "rToken",
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"outputs": [
					{
						"type": "core::integer::u256"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "get_maximum_deposit_amount",
				"type": "function",
				"inputs": [
					{
						"name": "rToken",
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"outputs": [
					{
						"type": "core::integer::u256"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "get_minimum_loan_amount",
				"type": "function",
				"inputs": [
					{
						"name": "dToken",
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"outputs": [
					{
						"type": "core::integer::u256"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "get_maximum_loan_amount",
				"type": "function",
				"inputs": [
					{
						"name": "dToken",
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"outputs": [
					{
						"type": "core::integer::u256"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "get_deposit_vaults_len",
				"type": "function",
				"inputs": [],
				"outputs": [
					{
						"type": "core::felt252"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "get_borrow_vault",
				"type": "function",
				"inputs": [
					{
						"name": "dToken",
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"outputs": [
					{
						"type": "common::structs::governor::GovernorStruct::BorrowVaultMetadata"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "is_dVault_supported",
				"type": "function",
				"inputs": [
					{
						"name": "dToken",
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"outputs": [
					{
						"type": "core::bool"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "get_borrow_vault_by_index",
				"type": "function",
				"inputs": [
					{
						"name": "index",
						"type": "core::felt252"
					}
				],
				"outputs": [
					{
						"type": "(core::starknet::contract_address::ContractAddress, common::structs::governor::GovernorStruct::BorrowVaultMetadata)"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "get_borrow_vaults_len",
				"type": "function",
				"inputs": [],
				"outputs": [
					{
						"type": "core::felt252"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "get_asset_metadata",
				"type": "function",
				"inputs": [
					{
						"name": "index",
						"type": "core::felt252"
					}
				],
				"outputs": [
					{
						"type": "(core::starknet::contract_address::ContractAddress, common::structs::governor::GovernorStruct::AssetMetadata)"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "get_metadata",
				"type": "function",
				"inputs": [
					{
						"name": "asset",
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"outputs": [
					{
						"type": "common::structs::governor::GovernorStruct::AssetMetadata"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "get_secondary_market_support",
				"type": "function",
				"inputs": [
					{
						"name": "address",
						"type": "core::starknet::contract_address::ContractAddress"
					},
					{
						"name": "integration",
						"type": "core::felt252"
					}
				],
				"outputs": [
					{
						"type": "common::structs::governor::GovernorStruct::SecondaryMarket"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "get_integration_selector_mapping",
				"type": "function",
				"inputs": [
					{
						"name": "integration",
						"type": "core::felt252"
					},
					{
						"name": "method",
						"type": "core::felt252"
					}
				],
				"outputs": [
					{
						"type": "core::felt252"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "get_asset_metadata_len",
				"type": "function",
				"inputs": [],
				"outputs": [
					{
						"type": "core::felt252"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "get_rToken_from_asset",
				"type": "function",
				"inputs": [
					{
						"name": "asset",
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"outputs": [
					{
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "get_asset_from_rToken",
				"type": "function",
				"inputs": [
					{
						"name": "rToken",
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"outputs": [
					{
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "get_dToken_from_asset",
				"type": "function",
				"inputs": [
					{
						"name": "asset",
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"outputs": [
					{
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "get_asset_from_dToken",
				"type": "function",
				"inputs": [
					{
						"name": "dToken",
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"outputs": [
					{
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "get_staking_contract",
				"type": "function",
				"inputs": [],
				"outputs": [
					{
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "get_collector_contract",
				"type": "function",
				"inputs": [],
				"outputs": [
					{
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "get_category_and_function_type_allowed",
				"type": "function",
				"inputs": [
					{
						"name": "integration",
						"type": "core::felt252"
					},
					{
						"name": "selector",
						"type": "core::felt252"
					}
				],
				"outputs": [
					{
						"type": "core::bool"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "get_integration_contract_address",
				"type": "function",
				"inputs": [],
				"outputs": [
					{
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "get_liquidation_base_market",
				"type": "function",
				"inputs": [],
				"outputs": [
					{
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "get_comptroller",
				"type": "function",
				"inputs": [],
				"outputs": [
					{
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "get_router",
				"type": "function",
				"inputs": [],
				"outputs": [
					{
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "set_comptroller",
				"type": "function",
				"inputs": [
					{
						"name": "address",
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"outputs": [],
				"state_mutability": "external"
			},
			{
				"name": "set_router",
				"type": "function",
				"inputs": [
					{
						"name": "address",
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"outputs": [],
				"state_mutability": "external"
			},
			{
				"name": "get_interest_contract",
				"type": "function",
				"inputs": [],
				"outputs": [
					{
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "set_interest_contract",
				"type": "function",
				"inputs": [
					{
						"name": "address",
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"outputs": [],
				"state_mutability": "external"
			}
		]
	},
	{
		"name": "SecurityImpl",
		"type": "impl",
		"interface_name": "common::components::security::ISecurity"
	},
	{
		"name": "common::components::security::ISecurity",
		"type": "interface",
		"items": [
			{
				"name": "upgradeClassHash",
				"type": "function",
				"inputs": [
					{
						"name": "new_class_hash",
						"type": "core::starknet::class_hash::ClassHash"
					}
				],
				"outputs": [],
				"state_mutability": "external"
			},
			{
				"name": "pause",
				"type": "function",
				"inputs": [],
				"outputs": [],
				"state_mutability": "external"
			},
			{
				"name": "unpause",
				"type": "function",
				"inputs": [],
				"outputs": [],
				"state_mutability": "external"
			},
			{
				"name": "is_paused",
				"type": "function",
				"inputs": [],
				"outputs": [
					{
						"type": "core::bool"
					}
				],
				"state_mutability": "view"
			},
			{
				"name": "set_access_control",
				"type": "function",
				"inputs": [
					{
						"name": "access_control",
						"type": "core::starknet::contract_address::ContractAddress"
					}
				],
				"outputs": [],
				"state_mutability": "external"
			}
		]
	},
	{
		"name": "constructor",
		"type": "constructor",
		"inputs": [
			{
				"name": "accessControl",
				"type": "core::starknet::contract_address::ContractAddress"
			}
		]
	},
	{
		"kind": "struct",
		"name": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Upgraded",
		"type": "event",
		"members": [
			{
				"kind": "data",
				"name": "class_hash",
				"type": "core::starknet::class_hash::ClassHash"
			}
		]
	},
	{
		"kind": "enum",
		"name": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Event",
		"type": "event",
		"variants": [
			{
				"kind": "nested",
				"name": "Upgraded",
				"type": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Upgraded"
			}
		]
	},
	{
		"kind": "struct",
		"name": "openzeppelin::security::pausable::PausableComponent::Paused",
		"type": "event",
		"members": [
			{
				"kind": "data",
				"name": "account",
				"type": "core::starknet::contract_address::ContractAddress"
			}
		]
	},
	{
		"kind": "struct",
		"name": "openzeppelin::security::pausable::PausableComponent::Unpaused",
		"type": "event",
		"members": [
			{
				"kind": "data",
				"name": "account",
				"type": "core::starknet::contract_address::ContractAddress"
			}
		]
	},
	{
		"kind": "enum",
		"name": "openzeppelin::security::pausable::PausableComponent::Event",
		"type": "event",
		"variants": [
			{
				"kind": "nested",
				"name": "Paused",
				"type": "openzeppelin::security::pausable::PausableComponent::Paused"
			},
			{
				"kind": "nested",
				"name": "Unpaused",
				"type": "openzeppelin::security::pausable::PausableComponent::Unpaused"
			}
		]
	},
	{
		"kind": "enum",
		"name": "openzeppelin::security::reentrancyguard::ReentrancyGuardComponent::Event",
		"type": "event",
		"variants": []
	},
	{
		"kind": "enum",
		"name": "common::components::security::SecurityComponent::Event",
		"type": "event",
		"variants": []
	},
	{
		"kind": "enum",
		"name": "v1_core::contracts::governor::Governor::Event",
		"type": "event",
		"variants": [
			{
				"kind": "flat",
				"name": "UpgradeableEvent",
				"type": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Event"
			},
			{
				"kind": "flat",
				"name": "PausableEvent",
				"type": "openzeppelin::security::pausable::PausableComponent::Event"
			},
			{
				"kind": "flat",
				"name": "ReentrancyGuardEvent",
				"type": "openzeppelin::security::reentrancyguard::ReentrancyGuardComponent::Event"
			},
			{
				"kind": "flat",
				"name": "SecurityEvent",
				"type": "common::components::security::SecurityComponent::Event"
			}
		]
	}
]
