name: Build & deploy

on:
  push:
    branches:
      - development-V1

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout this repo"
        uses: actions/checkout@v2
      - name: Cache modules
        uses: actions/cache@v1
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Use Node.js 20
        uses: actions/setup-node@v1
        with:
          node-version: 20

      - name: "Setup .env"
        run: |
          touch .env
          echo 'NEXT_PUBLIC_APP_ENV=production' >> .env
          echo 'NEXT_PUBLIC_NODE_ENV=mainnet' >> .env
          echo 'NEXT_PUBLIC_TESTNET_CHAINID=0x534e5f474f45524c49' >> .env
          echo 'NEXT_PUBLIC_MAINNET_CHAINID=0x534e5f4d41494e' >> .env
          echo 'NEXT_PUBLIC_METRICS_API=https://metricsapimainnet.hashstack.finance' >> .env
          echo 'NEXT_PUBLIC_MIXPANEL_KEY=${{secrets.NEXT_PUBLIC_MIXPANEL_KEY_MAINNET}}' >> .env
          echo 'NEXT_PUBLIC_INFURA_MAINNET=${{secrets.NEXT_PUBLIC_INFURA_MAINNET}}' >> .env
          echo 'NEXT_PUBLIC_INFURA_TESTNET=${{secrets.NEXT_PUBLIC_INFURA_TESTNET}}' >> .env
          echo 'NEXT_PUBLIC_FEEDBACK_API=${{secrets.NEXT_PUBLIC_FEEDBACK_API}}' >> .env
          echo 'NEXT_PUBLIC_POSTHOG_KEY=${{secrets.NEXT_PUBLIC_POSTHOG_KEY}}' >> .env
          echo 'NEXT_PUBLIC_HOSTHOG_HOST=${{secrets.NEXT_PUBLIC_HOSTHOG_HOST}}' >> .env

      - name: Accessing the cer
        run: |
          echo '${{secrets.AWS_ACCESS_KEY_CER}}' >> deployer.cer
          chmod 600 deployer.cer
          cat deployer.cer
          ls -la

      - name: Stopping the application instance
        run: |
          ssh -o StrictHostKeyChecking=no -i deployer.cer ubuntu@ec2-13-212-154-59.ap-southeast-1.compute.amazonaws.com './stop_service.sh'
          echo "PM2 service stopped ⚠️"

      - name: Zipping and sending
        run: |
          zip -r release.zip .
          scp -o StrictHostKeyChecking=no -i deployer.cer release.zip ubuntu@ec2-13-212-154-59.ap-southeast-1.compute.amazonaws.com:/home/ubuntu/release.zip
          echo "Zip sent ✅"

      - name: Building local - AWS
        run: |
          ssh -o StrictHostKeyChecking=no -i deployer.cer ubuntu@ec2-13-212-154-59.ap-southeast-1.compute.amazonaws.com 'unzip release.zip -d ./release'
          echo "Unzip done ✅"
          ssh -o StrictHostKeyChecking=no -i deployer.cer ubuntu@ec2-13-212-154-59.ap-southeast-1.compute.amazonaws.com 'cd release && rm -rf node_modules && yarn && yarn build'
          echo "Dependencies Installed !!! ✅"

      - name: Running the service
        run: |
          ssh -o StrictHostKeyChecking=no -i deployer.cer ubuntu@ec2-13-212-154-59.ap-southeast-1.compute.amazonaws.com 'cd release && pm2 start yarn -- start && sudo systemctl restart nginx'
